

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Thu Oct 04 23:12:57 2018

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F1455
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	text9,local,class=CODE,merge=1,delta=2
    17                           	psect	text10,local,class=CODE,merge=1,delta=2
    18                           	psect	text11,local,class=CODE,merge=1,delta=2
    19                           	psect	text12,local,class=CODE,merge=1,delta=2
    20                           	psect	text13,local,class=CODE,merge=1,delta=2
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 1.42
    24                           ; Generated 13/04/2017 GMT
    25                           ; 
    26                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F1455 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000E                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  008C                     	;# 
    83  008E                     	;# 
    84  0091                     	;# 
    85  0092                     	;# 
    86  0095                     	;# 
    87  0096                     	;# 
    88  0097                     	;# 
    89  0098                     	;# 
    90  0099                     	;# 
    91  009A                     	;# 
    92  009B                     	;# 
    93  009B                     	;# 
    94  009C                     	;# 
    95  009D                     	;# 
    96  009E                     	;# 
    97  009F                     	;# 
    98  010C                     	;# 
    99  010E                     	;# 
   100  0111                     	;# 
   101  0112                     	;# 
   102  0113                     	;# 
   103  0114                     	;# 
   104  0115                     	;# 
   105  0116                     	;# 
   106  0117                     	;# 
   107  0118                     	;# 
   108  0119                     	;# 
   109  011D                     	;# 
   110  018C                     	;# 
   111  018E                     	;# 
   112  0191                     	;# 
   113  0191                     	;# 
   114  0192                     	;# 
   115  0193                     	;# 
   116  0193                     	;# 
   117  0194                     	;# 
   118  0195                     	;# 
   119  0196                     	;# 
   120  0197                     	;# 
   121  0199                     	;# 
   122  019A                     	;# 
   123  019B                     	;# 
   124  019B                     	;# 
   125  019C                     	;# 
   126  019D                     	;# 
   127  019E                     	;# 
   128  019F                     	;# 
   129  020C                     	;# 
   130  0211                     	;# 
   131  0211                     	;# 
   132  0212                     	;# 
   133  0212                     	;# 
   134  0213                     	;# 
   135  0213                     	;# 
   136  0214                     	;# 
   137  0214                     	;# 
   138  0215                     	;# 
   139  0215                     	;# 
   140  0215                     	;# 
   141  0216                     	;# 
   142  0216                     	;# 
   143  0217                     	;# 
   144  0217                     	;# 
   145  0391                     	;# 
   146  0392                     	;# 
   147  0393                     	;# 
   148  039A                     	;# 
   149  039B                     	;# 
   150  0611                     	;# 
   151  0612                     	;# 
   152  0613                     	;# 
   153  0613                     	;# 
   154  0614                     	;# 
   155  0615                     	;# 
   156  0616                     	;# 
   157  0616                     	;# 
   158  0691                     	;# 
   159  0692                     	;# 
   160  0693                     	;# 
   161  0694                     	;# 
   162  0695                     	;# 
   163  0E8E                     	;# 
   164  0E8F                     	;# 
   165  0E90                     	;# 
   166  0E91                     	;# 
   167  0E92                     	;# 
   168  0E93                     	;# 
   169  0E94                     	;# 
   170  0E94                     	;# 
   171  0E95                     	;# 
   172  0E96                     	;# 
   173  0E97                     	;# 
   174  0E98                     	;# 
   175  0E99                     	;# 
   176  0E9A                     	;# 
   177  0E9B                     	;# 
   178  0E9C                     	;# 
   179  0E9D                     	;# 
   180  0E9E                     	;# 
   181  0E9F                     	;# 
   182  0FE4                     	;# 
   183  0FE5                     	;# 
   184  0FE6                     	;# 
   185  0FE7                     	;# 
   186  0FE8                     	;# 
   187  0FE9                     	;# 
   188  0FEA                     	;# 
   189  0FEB                     	;# 
   190  0FED                     	;# 
   191  0FEE                     	;# 
   192  0FEF                     	;# 
   193  0000                     	;# 
   194  0001                     	;# 
   195  0002                     	;# 
   196  0003                     	;# 
   197  0004                     	;# 
   198  0005                     	;# 
   199  0006                     	;# 
   200  0007                     	;# 
   201  0008                     	;# 
   202  0009                     	;# 
   203  000A                     	;# 
   204  000B                     	;# 
   205  000C                     	;# 
   206  000E                     	;# 
   207  0011                     	;# 
   208  0012                     	;# 
   209  0015                     	;# 
   210  0016                     	;# 
   211  0016                     	;# 
   212  0017                     	;# 
   213  0018                     	;# 
   214  0019                     	;# 
   215  001A                     	;# 
   216  001B                     	;# 
   217  001C                     	;# 
   218  008C                     	;# 
   219  008E                     	;# 
   220  0091                     	;# 
   221  0092                     	;# 
   222  0095                     	;# 
   223  0096                     	;# 
   224  0097                     	;# 
   225  0098                     	;# 
   226  0099                     	;# 
   227  009A                     	;# 
   228  009B                     	;# 
   229  009B                     	;# 
   230  009C                     	;# 
   231  009D                     	;# 
   232  009E                     	;# 
   233  009F                     	;# 
   234  010C                     	;# 
   235  010E                     	;# 
   236  0111                     	;# 
   237  0112                     	;# 
   238  0113                     	;# 
   239  0114                     	;# 
   240  0115                     	;# 
   241  0116                     	;# 
   242  0117                     	;# 
   243  0118                     	;# 
   244  0119                     	;# 
   245  011D                     	;# 
   246  018C                     	;# 
   247  018E                     	;# 
   248  0191                     	;# 
   249  0191                     	;# 
   250  0192                     	;# 
   251  0193                     	;# 
   252  0193                     	;# 
   253  0194                     	;# 
   254  0195                     	;# 
   255  0196                     	;# 
   256  0197                     	;# 
   257  0199                     	;# 
   258  019A                     	;# 
   259  019B                     	;# 
   260  019B                     	;# 
   261  019C                     	;# 
   262  019D                     	;# 
   263  019E                     	;# 
   264  019F                     	;# 
   265  020C                     	;# 
   266  0211                     	;# 
   267  0211                     	;# 
   268  0212                     	;# 
   269  0212                     	;# 
   270  0213                     	;# 
   271  0213                     	;# 
   272  0214                     	;# 
   273  0214                     	;# 
   274  0215                     	;# 
   275  0215                     	;# 
   276  0215                     	;# 
   277  0216                     	;# 
   278  0216                     	;# 
   279  0217                     	;# 
   280  0217                     	;# 
   281  0391                     	;# 
   282  0392                     	;# 
   283  0393                     	;# 
   284  039A                     	;# 
   285  039B                     	;# 
   286  0611                     	;# 
   287  0612                     	;# 
   288  0613                     	;# 
   289  0613                     	;# 
   290  0614                     	;# 
   291  0615                     	;# 
   292  0616                     	;# 
   293  0616                     	;# 
   294  0691                     	;# 
   295  0692                     	;# 
   296  0693                     	;# 
   297  0694                     	;# 
   298  0695                     	;# 
   299  0E8E                     	;# 
   300  0E8F                     	;# 
   301  0E90                     	;# 
   302  0E91                     	;# 
   303  0E92                     	;# 
   304  0E93                     	;# 
   305  0E94                     	;# 
   306  0E94                     	;# 
   307  0E95                     	;# 
   308  0E96                     	;# 
   309  0E97                     	;# 
   310  0E98                     	;# 
   311  0E99                     	;# 
   312  0E9A                     	;# 
   313  0E9B                     	;# 
   314  0E9C                     	;# 
   315  0E9D                     	;# 
   316  0E9E                     	;# 
   317  0E9F                     	;# 
   318  0FE4                     	;# 
   319  0FE5                     	;# 
   320  0FE6                     	;# 
   321  0FE7                     	;# 
   322  0FE8                     	;# 
   323  0FE9                     	;# 
   324  0FEA                     	;# 
   325  0FEB                     	;# 
   326  0FED                     	;# 
   327  0FEE                     	;# 
   328  0FEF                     	;# 
   329  0000                     	;# 
   330  0001                     	;# 
   331  0002                     	;# 
   332  0003                     	;# 
   333  0004                     	;# 
   334  0005                     	;# 
   335  0006                     	;# 
   336  0007                     	;# 
   337  0008                     	;# 
   338  0009                     	;# 
   339  000A                     	;# 
   340  000B                     	;# 
   341  000C                     	;# 
   342  000E                     	;# 
   343  0011                     	;# 
   344  0012                     	;# 
   345  0015                     	;# 
   346  0016                     	;# 
   347  0016                     	;# 
   348  0017                     	;# 
   349  0018                     	;# 
   350  0019                     	;# 
   351  001A                     	;# 
   352  001B                     	;# 
   353  001C                     	;# 
   354  008C                     	;# 
   355  008E                     	;# 
   356  0091                     	;# 
   357  0092                     	;# 
   358  0095                     	;# 
   359  0096                     	;# 
   360  0097                     	;# 
   361  0098                     	;# 
   362  0099                     	;# 
   363  009A                     	;# 
   364  009B                     	;# 
   365  009B                     	;# 
   366  009C                     	;# 
   367  009D                     	;# 
   368  009E                     	;# 
   369  009F                     	;# 
   370  010C                     	;# 
   371  010E                     	;# 
   372  0111                     	;# 
   373  0112                     	;# 
   374  0113                     	;# 
   375  0114                     	;# 
   376  0115                     	;# 
   377  0116                     	;# 
   378  0117                     	;# 
   379  0118                     	;# 
   380  0119                     	;# 
   381  011D                     	;# 
   382  018C                     	;# 
   383  018E                     	;# 
   384  0191                     	;# 
   385  0191                     	;# 
   386  0192                     	;# 
   387  0193                     	;# 
   388  0193                     	;# 
   389  0194                     	;# 
   390  0195                     	;# 
   391  0196                     	;# 
   392  0197                     	;# 
   393  0199                     	;# 
   394  019A                     	;# 
   395  019B                     	;# 
   396  019B                     	;# 
   397  019C                     	;# 
   398  019D                     	;# 
   399  019E                     	;# 
   400  019F                     	;# 
   401  020C                     	;# 
   402  0211                     	;# 
   403  0211                     	;# 
   404  0212                     	;# 
   405  0212                     	;# 
   406  0213                     	;# 
   407  0213                     	;# 
   408  0214                     	;# 
   409  0214                     	;# 
   410  0215                     	;# 
   411  0215                     	;# 
   412  0215                     	;# 
   413  0216                     	;# 
   414  0216                     	;# 
   415  0217                     	;# 
   416  0217                     	;# 
   417  0391                     	;# 
   418  0392                     	;# 
   419  0393                     	;# 
   420  039A                     	;# 
   421  039B                     	;# 
   422  0611                     	;# 
   423  0612                     	;# 
   424  0613                     	;# 
   425  0613                     	;# 
   426  0614                     	;# 
   427  0615                     	;# 
   428  0616                     	;# 
   429  0616                     	;# 
   430  0691                     	;# 
   431  0692                     	;# 
   432  0693                     	;# 
   433  0694                     	;# 
   434  0695                     	;# 
   435  0E8E                     	;# 
   436  0E8F                     	;# 
   437  0E90                     	;# 
   438  0E91                     	;# 
   439  0E92                     	;# 
   440  0E93                     	;# 
   441  0E94                     	;# 
   442  0E94                     	;# 
   443  0E95                     	;# 
   444  0E96                     	;# 
   445  0E97                     	;# 
   446  0E98                     	;# 
   447  0E99                     	;# 
   448  0E9A                     	;# 
   449  0E9B                     	;# 
   450  0E9C                     	;# 
   451  0E9D                     	;# 
   452  0E9E                     	;# 
   453  0E9F                     	;# 
   454  0FE4                     	;# 
   455  0FE5                     	;# 
   456  0FE6                     	;# 
   457  0FE7                     	;# 
   458  0FE8                     	;# 
   459  0FE9                     	;# 
   460  0FEA                     	;# 
   461  0FEB                     	;# 
   462  0FED                     	;# 
   463  0FEE                     	;# 
   464  0FEF                     	;# 
   465  0000                     	;# 
   466  0001                     	;# 
   467  0002                     	;# 
   468  0003                     	;# 
   469  0004                     	;# 
   470  0005                     	;# 
   471  0006                     	;# 
   472  0007                     	;# 
   473  0008                     	;# 
   474  0009                     	;# 
   475  000A                     	;# 
   476  000B                     	;# 
   477  000C                     	;# 
   478  000E                     	;# 
   479  0011                     	;# 
   480  0012                     	;# 
   481  0015                     	;# 
   482  0016                     	;# 
   483  0016                     	;# 
   484  0017                     	;# 
   485  0018                     	;# 
   486  0019                     	;# 
   487  001A                     	;# 
   488  001B                     	;# 
   489  001C                     	;# 
   490  008C                     	;# 
   491  008E                     	;# 
   492  0091                     	;# 
   493  0092                     	;# 
   494  0095                     	;# 
   495  0096                     	;# 
   496  0097                     	;# 
   497  0098                     	;# 
   498  0099                     	;# 
   499  009A                     	;# 
   500  009B                     	;# 
   501  009B                     	;# 
   502  009C                     	;# 
   503  009D                     	;# 
   504  009E                     	;# 
   505  009F                     	;# 
   506  010C                     	;# 
   507  010E                     	;# 
   508  0111                     	;# 
   509  0112                     	;# 
   510  0113                     	;# 
   511  0114                     	;# 
   512  0115                     	;# 
   513  0116                     	;# 
   514  0117                     	;# 
   515  0118                     	;# 
   516  0119                     	;# 
   517  011D                     	;# 
   518  018C                     	;# 
   519  018E                     	;# 
   520  0191                     	;# 
   521  0191                     	;# 
   522  0192                     	;# 
   523  0193                     	;# 
   524  0193                     	;# 
   525  0194                     	;# 
   526  0195                     	;# 
   527  0196                     	;# 
   528  0197                     	;# 
   529  0199                     	;# 
   530  019A                     	;# 
   531  019B                     	;# 
   532  019B                     	;# 
   533  019C                     	;# 
   534  019D                     	;# 
   535  019E                     	;# 
   536  019F                     	;# 
   537  020C                     	;# 
   538  0211                     	;# 
   539  0211                     	;# 
   540  0212                     	;# 
   541  0212                     	;# 
   542  0213                     	;# 
   543  0213                     	;# 
   544  0214                     	;# 
   545  0214                     	;# 
   546  0215                     	;# 
   547  0215                     	;# 
   548  0215                     	;# 
   549  0216                     	;# 
   550  0216                     	;# 
   551  0217                     	;# 
   552  0217                     	;# 
   553  0391                     	;# 
   554  0392                     	;# 
   555  0393                     	;# 
   556  039A                     	;# 
   557  039B                     	;# 
   558  0611                     	;# 
   559  0612                     	;# 
   560  0613                     	;# 
   561  0613                     	;# 
   562  0614                     	;# 
   563  0615                     	;# 
   564  0616                     	;# 
   565  0616                     	;# 
   566  0691                     	;# 
   567  0692                     	;# 
   568  0693                     	;# 
   569  0694                     	;# 
   570  0695                     	;# 
   571  0E8E                     	;# 
   572  0E8F                     	;# 
   573  0E90                     	;# 
   574  0E91                     	;# 
   575  0E92                     	;# 
   576  0E93                     	;# 
   577  0E94                     	;# 
   578  0E94                     	;# 
   579  0E95                     	;# 
   580  0E96                     	;# 
   581  0E97                     	;# 
   582  0E98                     	;# 
   583  0E99                     	;# 
   584  0E9A                     	;# 
   585  0E9B                     	;# 
   586  0E9C                     	;# 
   587  0E9D                     	;# 
   588  0E9E                     	;# 
   589  0E9F                     	;# 
   590  0FE4                     	;# 
   591  0FE5                     	;# 
   592  0FE6                     	;# 
   593  0FE7                     	;# 
   594  0FE8                     	;# 
   595  0FE9                     	;# 
   596  0FEA                     	;# 
   597  0FEB                     	;# 
   598  0FED                     	;# 
   599  0FEE                     	;# 
   600  0FEF                     	;# 
   601  0000                     	;# 
   602  0001                     	;# 
   603  0002                     	;# 
   604  0003                     	;# 
   605  0004                     	;# 
   606  0005                     	;# 
   607  0006                     	;# 
   608  0007                     	;# 
   609  0008                     	;# 
   610  0009                     	;# 
   611  000A                     	;# 
   612  000B                     	;# 
   613  000C                     	;# 
   614  000E                     	;# 
   615  0011                     	;# 
   616  0012                     	;# 
   617  0015                     	;# 
   618  0016                     	;# 
   619  0016                     	;# 
   620  0017                     	;# 
   621  0018                     	;# 
   622  0019                     	;# 
   623  001A                     	;# 
   624  001B                     	;# 
   625  001C                     	;# 
   626  008C                     	;# 
   627  008E                     	;# 
   628  0091                     	;# 
   629  0092                     	;# 
   630  0095                     	;# 
   631  0096                     	;# 
   632  0097                     	;# 
   633  0098                     	;# 
   634  0099                     	;# 
   635  009A                     	;# 
   636  009B                     	;# 
   637  009B                     	;# 
   638  009C                     	;# 
   639  009D                     	;# 
   640  009E                     	;# 
   641  009F                     	;# 
   642  010C                     	;# 
   643  010E                     	;# 
   644  0111                     	;# 
   645  0112                     	;# 
   646  0113                     	;# 
   647  0114                     	;# 
   648  0115                     	;# 
   649  0116                     	;# 
   650  0117                     	;# 
   651  0118                     	;# 
   652  0119                     	;# 
   653  011D                     	;# 
   654  018C                     	;# 
   655  018E                     	;# 
   656  0191                     	;# 
   657  0191                     	;# 
   658  0192                     	;# 
   659  0193                     	;# 
   660  0193                     	;# 
   661  0194                     	;# 
   662  0195                     	;# 
   663  0196                     	;# 
   664  0197                     	;# 
   665  0199                     	;# 
   666  019A                     	;# 
   667  019B                     	;# 
   668  019B                     	;# 
   669  019C                     	;# 
   670  019D                     	;# 
   671  019E                     	;# 
   672  019F                     	;# 
   673  020C                     	;# 
   674  0211                     	;# 
   675  0211                     	;# 
   676  0212                     	;# 
   677  0212                     	;# 
   678  0213                     	;# 
   679  0213                     	;# 
   680  0214                     	;# 
   681  0214                     	;# 
   682  0215                     	;# 
   683  0215                     	;# 
   684  0215                     	;# 
   685  0216                     	;# 
   686  0216                     	;# 
   687  0217                     	;# 
   688  0217                     	;# 
   689  0391                     	;# 
   690  0392                     	;# 
   691  0393                     	;# 
   692  039A                     	;# 
   693  039B                     	;# 
   694  0611                     	;# 
   695  0612                     	;# 
   696  0613                     	;# 
   697  0613                     	;# 
   698  0614                     	;# 
   699  0615                     	;# 
   700  0616                     	;# 
   701  0616                     	;# 
   702  0691                     	;# 
   703  0692                     	;# 
   704  0693                     	;# 
   705  0694                     	;# 
   706  0695                     	;# 
   707  0E8E                     	;# 
   708  0E8F                     	;# 
   709  0E90                     	;# 
   710  0E91                     	;# 
   711  0E92                     	;# 
   712  0E93                     	;# 
   713  0E94                     	;# 
   714  0E94                     	;# 
   715  0E95                     	;# 
   716  0E96                     	;# 
   717  0E97                     	;# 
   718  0E98                     	;# 
   719  0E99                     	;# 
   720  0E9A                     	;# 
   721  0E9B                     	;# 
   722  0E9C                     	;# 
   723  0E9D                     	;# 
   724  0E9E                     	;# 
   725  0E9F                     	;# 
   726  0FE4                     	;# 
   727  0FE5                     	;# 
   728  0FE6                     	;# 
   729  0FE7                     	;# 
   730  0FE8                     	;# 
   731  0FE9                     	;# 
   732  0FEA                     	;# 
   733  0FEB                     	;# 
   734  0FED                     	;# 
   735  0FEE                     	;# 
   736  0FEF                     	;# 
   737  0000                     	;# 
   738  0001                     	;# 
   739  0002                     	;# 
   740  0003                     	;# 
   741  0004                     	;# 
   742  0005                     	;# 
   743  0006                     	;# 
   744  0007                     	;# 
   745  0008                     	;# 
   746  0009                     	;# 
   747  000A                     	;# 
   748  000B                     	;# 
   749  000C                     	;# 
   750  000E                     	;# 
   751  0011                     	;# 
   752  0012                     	;# 
   753  0015                     	;# 
   754  0016                     	;# 
   755  0016                     	;# 
   756  0017                     	;# 
   757  0018                     	;# 
   758  0019                     	;# 
   759  001A                     	;# 
   760  001B                     	;# 
   761  001C                     	;# 
   762  008C                     	;# 
   763  008E                     	;# 
   764  0091                     	;# 
   765  0092                     	;# 
   766  0095                     	;# 
   767  0096                     	;# 
   768  0097                     	;# 
   769  0098                     	;# 
   770  0099                     	;# 
   771  009A                     	;# 
   772  009B                     	;# 
   773  009B                     	;# 
   774  009C                     	;# 
   775  009D                     	;# 
   776  009E                     	;# 
   777  009F                     	;# 
   778  010C                     	;# 
   779  010E                     	;# 
   780  0111                     	;# 
   781  0112                     	;# 
   782  0113                     	;# 
   783  0114                     	;# 
   784  0115                     	;# 
   785  0116                     	;# 
   786  0117                     	;# 
   787  0118                     	;# 
   788  0119                     	;# 
   789  011D                     	;# 
   790  018C                     	;# 
   791  018E                     	;# 
   792  0191                     	;# 
   793  0191                     	;# 
   794  0192                     	;# 
   795  0193                     	;# 
   796  0193                     	;# 
   797  0194                     	;# 
   798  0195                     	;# 
   799  0196                     	;# 
   800  0197                     	;# 
   801  0199                     	;# 
   802  019A                     	;# 
   803  019B                     	;# 
   804  019B                     	;# 
   805  019C                     	;# 
   806  019D                     	;# 
   807  019E                     	;# 
   808  019F                     	;# 
   809  020C                     	;# 
   810  0211                     	;# 
   811  0211                     	;# 
   812  0212                     	;# 
   813  0212                     	;# 
   814  0213                     	;# 
   815  0213                     	;# 
   816  0214                     	;# 
   817  0214                     	;# 
   818  0215                     	;# 
   819  0215                     	;# 
   820  0215                     	;# 
   821  0216                     	;# 
   822  0216                     	;# 
   823  0217                     	;# 
   824  0217                     	;# 
   825  0391                     	;# 
   826  0392                     	;# 
   827  0393                     	;# 
   828  039A                     	;# 
   829  039B                     	;# 
   830  0611                     	;# 
   831  0612                     	;# 
   832  0613                     	;# 
   833  0613                     	;# 
   834  0614                     	;# 
   835  0615                     	;# 
   836  0616                     	;# 
   837  0616                     	;# 
   838  0691                     	;# 
   839  0692                     	;# 
   840  0693                     	;# 
   841  0694                     	;# 
   842  0695                     	;# 
   843  0E8E                     	;# 
   844  0E8F                     	;# 
   845  0E90                     	;# 
   846  0E91                     	;# 
   847  0E92                     	;# 
   848  0E93                     	;# 
   849  0E94                     	;# 
   850  0E94                     	;# 
   851  0E95                     	;# 
   852  0E96                     	;# 
   853  0E97                     	;# 
   854  0E98                     	;# 
   855  0E99                     	;# 
   856  0E9A                     	;# 
   857  0E9B                     	;# 
   858  0E9C                     	;# 
   859  0E9D                     	;# 
   860  0E9E                     	;# 
   861  0E9F                     	;# 
   862  0FE4                     	;# 
   863  0FE5                     	;# 
   864  0FE6                     	;# 
   865  0FE7                     	;# 
   866  0FE8                     	;# 
   867  0FE9                     	;# 
   868  0FEA                     	;# 
   869  0FEB                     	;# 
   870  0FED                     	;# 
   871  0FEE                     	;# 
   872  0FEF                     	;# 
   873  001C                     _T2CONbits	set	28
   874  001C                     _T2CON	set	28
   875  0011                     _PIR1bits	set	17
   876  001A                     _TMR2	set	26
   877  001B                     _PR2	set	27
   878  0095                     _OPTION_REGbits	set	149
   879  008E                     _TRISC	set	142
   880  008C                     _TRISA	set	140
   881  009D                     _ADCON0bits	set	157
   882  009C                     _ADRESH	set	156
   883  009B                     _ADRESL	set	155
   884  009F                     _ADCON2	set	159
   885  009E                     _ADCON1	set	158
   886  009D                     _ADCON0	set	157
   887  0097                     _WDTCON	set	151
   888  0098                     _OSCTUNE	set	152
   889  0099                     _OSCCON	set	153
   890  011D                     _APFCON	set	285
   891  010E                     _LATC	set	270
   892  010C                     _LATA	set	268
   893  0116                     _BORCON	set	278
   894  018C                     _ANSELA	set	396
   895  018E                     _ANSELC	set	398
   896  020C                     _WPUA	set	524
   897  039B                     _ACTCON	set	923
   898  0611                     _PWM1DCL	set	1553
   899  0612                     _PWM1DCH	set	1554
   900  0613                     _PWM1CON	set	1555
   901                           
   902                           ; #config settings
   903  0000                     
   904                           	psect	cinit
   905  07F7                     start_initialization:	
   906  07F7                     __initialization:	
   907                           
   908                           ; Clear objects allocated to COMMON
   909  07F7  01F8               	clrf	__pbssCOMMON& (0+127)
   910  07F8  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   911  07F9  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   912  07FA  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   913  07FB  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
   914  07FC  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
   915  07FD                     end_of_initialization:	
   916                           ;End of C runtime variable initialization code
   917                           
   918  07FD                     __end_of__initialization:	
   919  07FD  0020               	movlb	0
   920  07FE  3187  2F80         	ljmp	_main	;jump to C main() function
   921                           
   922                           	psect	bssCOMMON
   923  0078                     __pbssCOMMON:	
   924  0078                     _ValoreADC:	
   925  0078                     	ds	2
   926  007A                     _DUTYC:	
   927  007A                     	ds	2
   928  007C                     _Temp:	
   929  007C                     	ds	2
   930                           
   931                           	psect	cstackCOMMON
   932  0070                     __pcstackCOMMON:	
   933  0070                     ?_PIN_MANAGER_Initialize:	
   934  0070                     ??_PIN_MANAGER_Initialize:	
   935                           ; 1 bytes @ 0x0
   936                           
   937  0070                     ?_OSCILLATOR_Initialize:	
   938                           ; 1 bytes @ 0x0
   939                           
   940  0070                     ??_OSCILLATOR_Initialize:	
   941                           ; 1 bytes @ 0x0
   942                           
   943  0070                     ?_WDT_Initialize:	
   944                           ; 1 bytes @ 0x0
   945                           
   946  0070                     ??_WDT_Initialize:	
   947                           ; 1 bytes @ 0x0
   948                           
   949  0070                     ?_TMR2_Initialize:	
   950                           ; 1 bytes @ 0x0
   951                           
   952  0070                     ??_TMR2_Initialize:	
   953                           ; 1 bytes @ 0x0
   954                           
   955  0070                     ?_ADC_Initialize:	
   956                           ; 1 bytes @ 0x0
   957                           
   958  0070                     ??_ADC_Initialize:	
   959                           ; 1 bytes @ 0x0
   960                           
   961  0070                     ?_PWM1_Initialize:	
   962                           ; 1 bytes @ 0x0
   963                           
   964  0070                     ??_PWM1_Initialize:	
   965                           ; 1 bytes @ 0x0
   966                           
   967  0070                     ?_PWM1_LoadDutyValue:	
   968                           ; 1 bytes @ 0x0
   969                           
   970  0070                     ?_SYSTEM_Initialize:	
   971                           ; 1 bytes @ 0x0
   972                           
   973  0070                     ??_SYSTEM_Initialize:	
   974                           ; 1 bytes @ 0x0
   975                           
   976  0070                     ?_ADC_SelectChannel:	
   977                           ; 1 bytes @ 0x0
   978                           
   979  0070                     ??_ADC_SelectChannel:	
   980                           ; 1 bytes @ 0x0
   981                           
   982  0070                     ?_ADC_StartConversion:	
   983                           ; 1 bytes @ 0x0
   984                           
   985  0070                     ??_ADC_StartConversion:	
   986                           ; 1 bytes @ 0x0
   987                           
   988  0070                     ?_ADC_IsConversionDone:	
   989                           ; 1 bytes @ 0x0
   990                           
   991  0070                     ??_ADC_IsConversionDone:	
   992                           ; 1 bytes @ 0x0
   993                           
   994  0070                     ?_main:	
   995                           ; 1 bytes @ 0x0
   996                           
   997  0070                     ?_ADC_GetConversionResult:	
   998                           ; 1 bytes @ 0x0
   999                           
  1000  0070                     ?___wmul:	
  1001                           ; 2 bytes @ 0x0
  1002                           
  1003  0070                     PWM1_LoadDutyValue@dutyValue:	
  1004                           ; 2 bytes @ 0x0
  1005                           
  1006  0070                     ___wmul@multiplier:	
  1007                           ; 2 bytes @ 0x0
  1008                           
  1009                           
  1010                           ; 2 bytes @ 0x0
  1011  0070                     	ds	1
  1012  0071                     ADC_SelectChannel@channel:	
  1013                           
  1014                           ; 1 bytes @ 0x1
  1015  0071                     	ds	1
  1016  0072                     ??_PWM1_LoadDutyValue:	
  1017  0072                     ??_ADC_GetConversionResult:	
  1018                           ; 1 bytes @ 0x2
  1019                           
  1020  0072                     ___wmul@multiplicand:	
  1021                           ; 1 bytes @ 0x2
  1022                           
  1023                           
  1024                           ; 2 bytes @ 0x2
  1025  0072                     	ds	2
  1026  0074                     ??___wmul:	
  1027  0074                     ___wmul@product:	
  1028                           ; 1 bytes @ 0x4
  1029                           
  1030                           
  1031                           ; 2 bytes @ 0x4
  1032  0074                     	ds	2
  1033  0076                     ??_main:	
  1034                           
  1035                           ; 1 bytes @ 0x6
  1036  0076                     	ds	2
  1037                           
  1038                           	psect	maintext
  1039  0780                     __pmaintext:	
  1040 ;;
  1041 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1042 ;;
  1043 ;; *************** function _main *****************
  1044 ;; Defined at:
  1045 ;;		line 54 in file "main.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;		None
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;		None
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  1    wreg      void 
  1052 ;; Registers used:
  1053 ;;		wreg, status,2, status,0, pclath, cstack
  1054 ;; Tracked objects:
  1055 ;;		On entry : B1F/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1061 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1062 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1063 ;;Total ram usage:        2 bytes
  1064 ;; Hardware stack levels required when called:    2
  1065 ;; This function calls:
  1066 ;;		_ADC_GetConversionResult
  1067 ;;		_ADC_IsConversionDone
  1068 ;;		_ADC_SelectChannel
  1069 ;;		_ADC_StartConversion
  1070 ;;		_PWM1_LoadDutyValue
  1071 ;;		_SYSTEM_Initialize
  1072 ;;		___wmul
  1073 ;; This function is called by:
  1074 ;;		Startup code after reset
  1075 ;; This function uses a non-reentrant model
  1076 ;;
  1077                           
  1078                           
  1079                           ;psect for function _main
  1080  0780                     _main:	
  1081                           
  1082                           ;main.c: 57: SYSTEM_Initialize();
  1083                           
  1084                           ;incstack = 0
  1085                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1086  0780  3187  2729  3187   	fcall	_SYSTEM_Initialize
  1087                           
  1088                           ;main.c: 58: ADC_SelectChannel(channel_AN3);
  1089  0783  3003               	movlw	3
  1090  0784  3187  271C  3187   	fcall	_ADC_SelectChannel
  1091  0787                     L2:	
  1092                           
  1093                           ;main.c: 59: PWM1_LoadDutyValue(DUTYC);
  1094  0787  087B               	movf	_DUTYC+1,w
  1095  0788  00F1               	movwf	PWM1_LoadDutyValue@dutyValue+1
  1096  0789  087A               	movf	_DUTYC,w
  1097  078A  00F0               	movwf	PWM1_LoadDutyValue@dutyValue
  1098  078B  3187  274F  3187   	fcall	_PWM1_LoadDutyValue
  1099                           
  1100                           ;main.c: 79: if (1){
  1101                           
  1102                           ;main.c: 76: while (1)
  1103  078E  3003               	movlw	3
  1104  078F  00F7               	movwf	??_main+1
  1105  0790  308A               	movlw	138
  1106  0791  00F6               	movwf	??_main
  1107  0792  3056               	movlw	86
  1108  0793                     u237:	
  1109  0793  0B89               	decfsz	9,f
  1110  0794  2F93               	goto	u237
  1111  0795  0BF6               	decfsz	??_main,f
  1112  0796  2F93               	goto	u237
  1113  0797  0BF7               	decfsz	??_main+1,f
  1114  0798  2F93               	goto	u237
  1115                           
  1116                           ;main.c: 80: ADC_StartConversion();
  1117  0799  3186  26E8  3187   	fcall	_ADC_StartConversion
  1118  079C                     l729:	
  1119                           ;main.c: 81: while(!ADC_IsConversionDone());
  1120                           
  1121  079C  3186  26FB  3187   	fcall	_ADC_IsConversionDone
  1122  079F  3A00               	xorlw	0
  1123  07A0  1903               	skipnz
  1124  07A1  2F9C               	goto	l729
  1125                           
  1126                           ;main.c: 82: ValoreADC = ADC_GetConversionResult();
  1127  07A2  3186  26EF  3187   	fcall	_ADC_GetConversionResult
  1128  07A5  0871               	movf	?_ADC_GetConversionResult+1,w
  1129  07A6  00F9               	movwf	_ValoreADC+1
  1130  07A7  0870               	movf	?_ADC_GetConversionResult,w
  1131  07A8  00F8               	movwf	_ValoreADC
  1132                           
  1133                           ;main.c: 83: Temp = (ValoreADC - 82) / 4;
  1134  07A9  0878               	movf	_ValoreADC,w
  1135  07AA  3EAE               	addlw	174
  1136  07AB  00F6               	movwf	??_main
  1137  07AC  30FF               	movlw	255
  1138  07AD  3D79               	addwfc	_ValoreADC+1,w
  1139  07AE  00F7               	movwf	??_main+1
  1140  07AF  36F7               	lsrf	??_main+1,f
  1141  07B0  0CF6               	rrf	??_main,f
  1142  07B1  36F7               	lsrf	??_main+1,f
  1143  07B2  0CF6               	rrf	??_main,f
  1144  07B3  0876               	movf	??_main,w
  1145  07B4  00FC               	movwf	_Temp
  1146  07B5  0877               	movf	??_main+1,w
  1147  07B6  00FD               	movwf	_Temp+1
  1148                           
  1149                           ;main.c: 85: if (Temp > 60){
  1150  07B7  3000               	movlw	0
  1151  07B8  027D               	subwf	_Temp+1,w
  1152  07B9  303D               	movlw	61
  1153  07BA  1903               	skipnz
  1154  07BB  027C               	subwf	_Temp,w
  1155  07BC  1C03               	skipc
  1156  07BD  2FC2               	goto	l739
  1157                           
  1158                           ;main.c: 86: DUTYC = 0xFFFF;
  1159  07BE  30FF               	movlw	255
  1160  07BF  00FA               	movwf	_DUTYC
  1161  07C0  30FF               	movlw	255
  1162  07C1  2FD9               	goto	L1
  1163  07C2                     l739:	
  1164                           ;main.c: 87: }
  1165                           
  1166                           
  1167                           ;main.c: 88: else if (Temp < 30){
  1168  07C2  3000               	movlw	0
  1169  07C3  027D               	subwf	_Temp+1,w
  1170  07C4  301E               	movlw	30
  1171  07C5  1903               	skipnz
  1172  07C6  027C               	subwf	_Temp,w
  1173  07C7  1C03               	btfss	3,0
  1174  07C8  2FEF               	goto	l753
  1175                           
  1176                           ;main.c: 91: else {
  1177                           ;main.c: 92: DUTYC = (34 * Temp) - 1024;
  1178                           
  1179                           ;main.c: 90: }
  1180                           
  1181                           ;main.c: 89: DUTYC = 0x0000;
  1182  07C9  087D               	movf	_Temp+1,w
  1183  07CA  00F1               	movwf	___wmul@multiplier+1
  1184  07CB  087C               	movf	_Temp,w
  1185  07CC  00F0               	movwf	___wmul@multiplier
  1186  07CD  3022               	movlw	34
  1187  07CE  00F2               	movwf	___wmul@multiplicand
  1188  07CF  3000               	movlw	0
  1189  07D0  00F3               	movwf	___wmul@multiplicand+1
  1190  07D1  3187  2765  3187   	fcall	___wmul
  1191  07D4  0870               	movf	?___wmul,w
  1192  07D5  3E00               	addlw	0
  1193  07D6  00FA               	movwf	_DUTYC
  1194  07D7  30FC               	movlw	252
  1195  07D8  3D71               	addwfc	?___wmul+1,w
  1196  07D9                     L1:	
  1197  07D9  00FB               	movwf	_DUTYC+1
  1198                           
  1199                           ;main.c: 93: }
  1200                           ;main.c: 94: }
  1201  07DA  2F87               	goto	L2
  1202  07DB                     l747:	
  1203                           ;main.c: 97: while(!ADC_IsConversionDone());
  1204                           
  1205                           ;main.c: 95: else {
  1206                           ;main.c: 96: ADC_StartConversion();
  1207                           
  1208  07DB  3186  26FB  3187   	fcall	_ADC_IsConversionDone
  1209  07DE  3A00               	xorlw	0
  1210  07DF  1903               	skipnz
  1211  07E0  2FDB               	goto	l747
  1212                           
  1213                           ;main.c: 98: ValoreADC = ADC_GetConversionResult();
  1214  07E1  3186  26EF  3187   	fcall	_ADC_GetConversionResult
  1215  07E4  0871               	movf	?_ADC_GetConversionResult+1,w
  1216  07E5  00F9               	movwf	_ValoreADC+1
  1217  07E6  0870               	movf	?_ADC_GetConversionResult,w
  1218  07E7  00F8               	movwf	_ValoreADC
  1219                           
  1220                           ;main.c: 99: if (ValoreADC < 77){
  1221  07E8  3000               	movlw	0
  1222  07E9  0279               	subwf	_ValoreADC+1,w
  1223  07EA  304D               	movlw	77
  1224  07EB  1903               	skipnz
  1225  07EC  0278               	subwf	_ValoreADC,w
  1226  07ED  1803               	skipnc
  1227  07EE  2FF2               	goto	l755
  1228  07EF                     l753:	
  1229                           
  1230                           ;main.c: 100: DUTYC = 0x0000;
  1231  07EF  01FA               	clrf	_DUTYC
  1232  07F0  01FB               	clrf	_DUTYC+1
  1233                           
  1234                           ;main.c: 101: }
  1235  07F1  2F87               	goto	L2
  1236  07F2                     l755:	
  1237                           
  1238                           ;main.c: 102: else {
  1239                           ;main.c: 103: DUTYC = ValoreADC;
  1240  07F2  0879               	movf	_ValoreADC+1,w
  1241  07F3  00FB               	movwf	_DUTYC+1
  1242  07F4  0878               	movf	_ValoreADC,w
  1243  07F5  00FA               	movwf	_DUTYC
  1244  07F6  2F87               	goto	L2
  1245  07F7                     __end_of_main:	
  1246                           ;main.c: 104: }
  1247                           ;main.c: 105: }
  1248                           ;main.c: 106: PWM1_LoadDutyValue(DUTYC);
  1249                           
  1250                           
  1251                           	psect	text1
  1252  0765                     __ptext1:	
  1253 ;; *************** function ___wmul *****************
  1254 ;; Defined at:
  1255 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\Umul16.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;  multiplier      2    0[COMMON] unsigned int 
  1258 ;;  multiplicand    2    2[COMMON] unsigned int 
  1259 ;; Auto vars:     Size  Location     Type
  1260 ;;  product         2    4[COMMON] unsigned int 
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  2    0[COMMON] unsigned int 
  1263 ;; Registers used:
  1264 ;;		wreg, status,2, status,0
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1270 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1271 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1273 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1274 ;;Total ram usage:        6 bytes
  1275 ;; Hardware stack levels used:    1
  1276 ;; This function calls:
  1277 ;;		Nothing
  1278 ;; This function is called by:
  1279 ;;		_main
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283                           
  1284                           ;psect for function ___wmul
  1285  0765                     ___wmul:	
  1286                           
  1287                           ;incstack = 0
  1288                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1289  0765  01F4               	clrf	___wmul@product
  1290  0766  01F5               	clrf	___wmul@product+1
  1291  0767                     l713:	
  1292  0767  1C70               	btfss	___wmul@multiplier,0
  1293  0768  2F6D               	goto	l183
  1294  0769  0872               	movf	___wmul@multiplicand,w
  1295  076A  07F4               	addwf	___wmul@product,f
  1296  076B  0873               	movf	___wmul@multiplicand+1,w
  1297  076C  3DF5               	addwfc	___wmul@product+1,f
  1298  076D                     l183:	
  1299  076D  3001               	movlw	1
  1300  076E                     u155:	
  1301  076E  35F2               	lslf	___wmul@multiplicand,f
  1302  076F  0DF3               	rlf	___wmul@multiplicand+1,f
  1303  0770  0B89               	decfsz	9,f
  1304  0771  2F6E               	goto	u155
  1305  0772  3001               	movlw	1
  1306  0773                     u165:	
  1307  0773  36F1               	lsrf	___wmul@multiplier+1,f
  1308  0774  0CF0               	rrf	___wmul@multiplier,f
  1309  0775  0B89               	decfsz	9,f
  1310  0776  2F73               	goto	u165
  1311  0777  0870               	movf	___wmul@multiplier,w
  1312  0778  0471               	iorwf	___wmul@multiplier+1,w
  1313  0779  1D03               	btfss	3,2
  1314  077A  2F67               	goto	l713
  1315  077B  0875               	movf	___wmul@product+1,w
  1316  077C  00F1               	movwf	?___wmul+1
  1317  077D  0874               	movf	___wmul@product,w
  1318  077E  00F0               	movwf	?___wmul
  1319  077F  0008               	return
  1320  0780                     __end_of___wmul:	
  1321                           
  1322                           	psect	text2
  1323  0729                     __ptext2:	
  1324 ;; *************** function _SYSTEM_Initialize *****************
  1325 ;; Defined at:
  1326 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1327 ;; Parameters:    Size  Location     Type
  1328 ;;		None
  1329 ;; Auto vars:     Size  Location     Type
  1330 ;;		None
  1331 ;; Return value:  Size  Location     Type
  1332 ;;                  1    wreg      void 
  1333 ;; Registers used:
  1334 ;;		wreg, status,2, status,0, pclath, cstack
  1335 ;; Tracked objects:
  1336 ;;		On entry : 0/0
  1337 ;;		On exit  : 0/0
  1338 ;;		Unchanged: 0/0
  1339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1344 ;;Total ram usage:        0 bytes
  1345 ;; Hardware stack levels used:    1
  1346 ;; Hardware stack levels required when called:    1
  1347 ;; This function calls:
  1348 ;;		_ADC_Initialize
  1349 ;;		_OSCILLATOR_Initialize
  1350 ;;		_PIN_MANAGER_Initialize
  1351 ;;		_PWM1_Initialize
  1352 ;;		_TMR2_Initialize
  1353 ;;		_WDT_Initialize
  1354 ;; This function is called by:
  1355 ;;		_main
  1356 ;; This function uses a non-reentrant model
  1357 ;;
  1358                           
  1359                           
  1360                           ;psect for function _SYSTEM_Initialize
  1361  0729                     _SYSTEM_Initialize:	
  1362                           
  1363                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  1364                           
  1365                           ;incstack = 0
  1366                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1367  0729  3187  273B  3187   	fcall	_PIN_MANAGER_Initialize
  1368                           
  1369                           ;mcc.c: 54: OSCILLATOR_Initialize();
  1370  072C  3187  2713  3187   	fcall	_OSCILLATOR_Initialize
  1371                           
  1372                           ;mcc.c: 55: WDT_Initialize();
  1373  072F  3186  26EB  3187   	fcall	_WDT_Initialize
  1374                           
  1375                           ;mcc.c: 56: PWM1_Initialize();
  1376  0732  3186  26F5  3187   	fcall	_PWM1_Initialize
  1377                           
  1378                           ;mcc.c: 57: TMR2_Initialize();
  1379  0735  3187  2702  3187   	fcall	_TMR2_Initialize
  1380                           
  1381                           ;mcc.c: 58: ADC_Initialize();
  1382  0738  3187  270A         	fcall	_ADC_Initialize
  1383  073A  0008               	return
  1384  073B                     __end_of_SYSTEM_Initialize:	
  1385                           
  1386                           	psect	text3
  1387  06EB                     __ptext3:	
  1388 ;; *************** function _WDT_Initialize *****************
  1389 ;; Defined at:
  1390 ;;		line 73 in file "mcc_generated_files/mcc.c"
  1391 ;; Parameters:    Size  Location     Type
  1392 ;;		None
  1393 ;; Auto vars:     Size  Location     Type
  1394 ;;		None
  1395 ;; Return value:  Size  Location     Type
  1396 ;;                  1    wreg      void 
  1397 ;; Registers used:
  1398 ;;		wreg
  1399 ;; Tracked objects:
  1400 ;;		On entry : 0/0
  1401 ;;		On exit  : 0/0
  1402 ;;		Unchanged: 0/0
  1403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1408 ;;Total ram usage:        0 bytes
  1409 ;; Hardware stack levels used:    1
  1410 ;; This function calls:
  1411 ;;		Nothing
  1412 ;; This function is called by:
  1413 ;;		_SYSTEM_Initialize
  1414 ;; This function uses a non-reentrant model
  1415 ;;
  1416                           
  1417                           
  1418                           ;psect for function _WDT_Initialize
  1419  06EB                     _WDT_Initialize:	
  1420                           
  1421                           ;mcc.c: 76: WDTCON = 0x16;
  1422                           
  1423                           ;incstack = 0
  1424                           ; Regs used in _WDT_Initialize: [wreg]
  1425  06EB  3016               	movlw	22
  1426  06EC  0021               	movlb	1	; select bank1
  1427  06ED  0097               	movwf	23	;volatile
  1428  06EE  0008               	return
  1429  06EF                     __end_of_WDT_Initialize:	
  1430                           
  1431                           	psect	text4
  1432  0702                     __ptext4:	
  1433 ;; *************** function _TMR2_Initialize *****************
  1434 ;; Defined at:
  1435 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  1436 ;; Parameters:    Size  Location     Type
  1437 ;;		None
  1438 ;; Auto vars:     Size  Location     Type
  1439 ;;		None
  1440 ;; Return value:  Size  Location     Type
  1441 ;;                  1    wreg      void 
  1442 ;; Registers used:
  1443 ;;		wreg, status,2
  1444 ;; Tracked objects:
  1445 ;;		On entry : 0/0
  1446 ;;		On exit  : 0/0
  1447 ;;		Unchanged: 0/0
  1448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1453 ;;Total ram usage:        0 bytes
  1454 ;; Hardware stack levels used:    1
  1455 ;; This function calls:
  1456 ;;		Nothing
  1457 ;; This function is called by:
  1458 ;;		_SYSTEM_Initialize
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462                           
  1463                           ;psect for function _TMR2_Initialize
  1464  0702                     _TMR2_Initialize:	
  1465                           
  1466                           ;tmr2.c: 67: PR2 = 0x13;
  1467                           
  1468                           ;incstack = 0
  1469                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  1470  0702  3013               	movlw	19
  1471  0703  0020               	movlb	0	; select bank0
  1472  0704  009B               	movwf	27	;volatile
  1473                           
  1474                           ;tmr2.c: 70: TMR2 = 0x00;
  1475  0705  019A               	clrf	26	;volatile
  1476                           
  1477                           ;tmr2.c: 73: PIR1bits.TMR2IF = 0;
  1478  0706  1091               	bcf	17,1	;volatile
  1479                           
  1480                           ;tmr2.c: 76: T2CON = 0x04;
  1481  0707  3004               	movlw	4
  1482  0708  009C               	movwf	28	;volatile
  1483  0709  0008               	return
  1484  070A                     __end_of_TMR2_Initialize:	
  1485                           
  1486                           	psect	text5
  1487  06F5                     __ptext5:	
  1488 ;; *************** function _PWM1_Initialize *****************
  1489 ;; Defined at:
  1490 ;;		line 58 in file "mcc_generated_files/pwm1.c"
  1491 ;; Parameters:    Size  Location     Type
  1492 ;;		None
  1493 ;; Auto vars:     Size  Location     Type
  1494 ;;		None
  1495 ;; Return value:  Size  Location     Type
  1496 ;;                  1    wreg      void 
  1497 ;; Registers used:
  1498 ;;		wreg, status,2
  1499 ;; Tracked objects:
  1500 ;;		On entry : 0/0
  1501 ;;		On exit  : 0/0
  1502 ;;		Unchanged: 0/0
  1503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1508 ;;Total ram usage:        0 bytes
  1509 ;; Hardware stack levels used:    1
  1510 ;; This function calls:
  1511 ;;		Nothing
  1512 ;; This function is called by:
  1513 ;;		_SYSTEM_Initialize
  1514 ;; This function uses a non-reentrant model
  1515 ;;
  1516                           
  1517                           
  1518                           ;psect for function _PWM1_Initialize
  1519  06F5                     _PWM1_Initialize:	
  1520                           
  1521                           ;pwm1.c: 62: PWM1CON = 0xC0;
  1522                           
  1523                           ;incstack = 0
  1524                           ; Regs used in _PWM1_Initialize: [wreg+status,2]
  1525  06F5  30C0               	movlw	192
  1526  06F6  002C               	movlb	12	; select bank12
  1527  06F7  0093               	movwf	19	;volatile
  1528                           
  1529                           ;pwm1.c: 65: PWM1DCH = 0x00;
  1530  06F8  0192               	clrf	18	;volatile
  1531                           
  1532                           ;pwm1.c: 68: PWM1DCL = 0x00;
  1533  06F9  0191               	clrf	17	;volatile
  1534  06FA  0008               	return
  1535  06FB                     __end_of_PWM1_Initialize:	
  1536                           
  1537                           	psect	text6
  1538  073B                     __ptext6:	
  1539 ;; *************** function _PIN_MANAGER_Initialize *****************
  1540 ;; Defined at:
  1541 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;		None
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;		None
  1546 ;; Return value:  Size  Location     Type
  1547 ;;                  1    wreg      void 
  1548 ;; Registers used:
  1549 ;;		wreg, status,2
  1550 ;; Tracked objects:
  1551 ;;		On entry : 0/0
  1552 ;;		On exit  : 0/0
  1553 ;;		Unchanged: 0/0
  1554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1559 ;;Total ram usage:        0 bytes
  1560 ;; Hardware stack levels used:    1
  1561 ;; This function calls:
  1562 ;;		Nothing
  1563 ;; This function is called by:
  1564 ;;		_SYSTEM_Initialize
  1565 ;; This function uses a non-reentrant model
  1566 ;;
  1567                           
  1568                           
  1569                           ;psect for function _PIN_MANAGER_Initialize
  1570  073B                     _PIN_MANAGER_Initialize:	
  1571                           
  1572                           ;pin_manager.c: 62: LATA = 0x00;
  1573                           
  1574                           ;incstack = 0
  1575                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1576  073B  0022               	movlb	2	; select bank2
  1577  073C  018C               	clrf	12	;volatile
  1578                           
  1579                           ;pin_manager.c: 63: LATC = 0x00;
  1580  073D  018E               	clrf	14	;volatile
  1581                           
  1582                           ;pin_manager.c: 68: TRISA = 0x30;
  1583  073E  3030               	movlw	48
  1584  073F  0021               	movlb	1	; select bank1
  1585  0740  008C               	movwf	12	;volatile
  1586                           
  1587                           ;pin_manager.c: 69: TRISC = 0x1F;
  1588  0741  301F               	movlw	31
  1589  0742  008E               	movwf	14	;volatile
  1590                           
  1591                           ;pin_manager.c: 74: ANSELC = 0x0E;
  1592  0743  300E               	movlw	14
  1593  0744  0023               	movlb	3	; select bank3
  1594  0745  008E               	movwf	14	;volatile
  1595                           
  1596                           ;pin_manager.c: 75: ANSELA = 0x10;
  1597  0746  3010               	movlw	16
  1598  0747  008C               	movwf	12	;volatile
  1599                           
  1600                           ;pin_manager.c: 80: WPUA = 0x00;
  1601  0748  0024               	movlb	4	; select bank4
  1602  0749  018C               	clrf	12	;volatile
  1603                           
  1604                           ;pin_manager.c: 81: OPTION_REGbits.nWPUEN = 1;
  1605  074A  0021               	movlb	1	; select bank1
  1606  074B  1795               	bsf	21,7	;volatile
  1607                           
  1608                           ;pin_manager.c: 90: APFCON = 0x00;
  1609  074C  0022               	movlb	2	; select bank2
  1610  074D  019D               	clrf	29	;volatile
  1611  074E  0008               	return
  1612  074F                     __end_of_PIN_MANAGER_Initialize:	
  1613                           
  1614                           	psect	text7
  1615  0713                     __ptext7:	
  1616 ;; *************** function _OSCILLATOR_Initialize *****************
  1617 ;; Defined at:
  1618 ;;		line 61 in file "mcc_generated_files/mcc.c"
  1619 ;; Parameters:    Size  Location     Type
  1620 ;;		None
  1621 ;; Auto vars:     Size  Location     Type
  1622 ;;		None
  1623 ;; Return value:  Size  Location     Type
  1624 ;;                  1    wreg      void 
  1625 ;; Registers used:
  1626 ;;		wreg, status,2
  1627 ;; Tracked objects:
  1628 ;;		On entry : 0/0
  1629 ;;		On exit  : 0/0
  1630 ;;		Unchanged: 0/0
  1631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1636 ;;Total ram usage:        0 bytes
  1637 ;; Hardware stack levels used:    1
  1638 ;; This function calls:
  1639 ;;		Nothing
  1640 ;; This function is called by:
  1641 ;;		_SYSTEM_Initialize
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645                           
  1646                           ;psect for function _OSCILLATOR_Initialize
  1647  0713                     _OSCILLATOR_Initialize:	
  1648                           
  1649                           ;mcc.c: 64: OSCCON = 0x36;
  1650                           
  1651                           ;incstack = 0
  1652                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1653  0713  3036               	movlw	54
  1654  0714  0021               	movlb	1	; select bank1
  1655  0715  0099               	movwf	25	;volatile
  1656                           
  1657                           ;mcc.c: 66: OSCTUNE = 0x00;
  1658  0716  0198               	clrf	24	;volatile
  1659                           
  1660                           ;mcc.c: 68: ACTCON = 0x00;
  1661  0717  0027               	movlb	7	; select bank7
  1662  0718  019B               	clrf	27	;volatile
  1663                           
  1664                           ;mcc.c: 70: BORCON = 0x00;
  1665  0719  0022               	movlb	2	; select bank2
  1666  071A  0196               	clrf	22	;volatile
  1667  071B  0008               	return
  1668  071C                     __end_of_OSCILLATOR_Initialize:	
  1669                           
  1670                           	psect	text8
  1671  070A                     __ptext8:	
  1672 ;; *************** function _ADC_Initialize *****************
  1673 ;; Defined at:
  1674 ;;		line 65 in file "mcc_generated_files/adc.c"
  1675 ;; Parameters:    Size  Location     Type
  1676 ;;		None
  1677 ;; Auto vars:     Size  Location     Type
  1678 ;;		None
  1679 ;; Return value:  Size  Location     Type
  1680 ;;                  1    wreg      void 
  1681 ;; Registers used:
  1682 ;;		wreg, status,2
  1683 ;; Tracked objects:
  1684 ;;		On entry : 0/0
  1685 ;;		On exit  : 0/0
  1686 ;;		Unchanged: 0/0
  1687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1692 ;;Total ram usage:        0 bytes
  1693 ;; Hardware stack levels used:    1
  1694 ;; This function calls:
  1695 ;;		Nothing
  1696 ;; This function is called by:
  1697 ;;		_SYSTEM_Initialize
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701                           
  1702                           ;psect for function _ADC_Initialize
  1703  070A                     _ADC_Initialize:	
  1704                           
  1705                           ;adc.c: 70: ADCON0 = 0x01;
  1706                           
  1707                           ;incstack = 0
  1708                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  1709  070A  3001               	movlw	1
  1710  070B  0021               	movlb	1	; select bank1
  1711  070C  009D               	movwf	29	;volatile
  1712                           
  1713                           ;adc.c: 73: ADCON1 = 0xD0;
  1714  070D  30D0               	movlw	208
  1715  070E  009E               	movwf	30	;volatile
  1716                           
  1717                           ;adc.c: 76: ADCON2 = 0x00;
  1718  070F  019F               	clrf	31	;volatile
  1719                           
  1720                           ;adc.c: 79: ADRESL = 0x00;
  1721  0710  019B               	clrf	27	;volatile
  1722                           
  1723                           ;adc.c: 82: ADRESH = 0x00;
  1724  0711  019C               	clrf	28	;volatile
  1725  0712  0008               	return
  1726  0713                     __end_of_ADC_Initialize:	
  1727                           
  1728                           	psect	text9
  1729  074F                     __ptext9:	
  1730 ;; *************** function _PWM1_LoadDutyValue *****************
  1731 ;; Defined at:
  1732 ;;		line 72 in file "mcc_generated_files/pwm1.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;  dutyValue       2    0[COMMON] unsigned int 
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;		None
  1737 ;; Return value:  Size  Location     Type
  1738 ;;                  1    wreg      void 
  1739 ;; Registers used:
  1740 ;;		wreg, status,2, status,0
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1746 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1748 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1749 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1750 ;;Total ram usage:        4 bytes
  1751 ;; Hardware stack levels used:    1
  1752 ;; This function calls:
  1753 ;;		Nothing
  1754 ;; This function is called by:
  1755 ;;		_main
  1756 ;; This function uses a non-reentrant model
  1757 ;;
  1758                           
  1759                           
  1760                           ;psect for function _PWM1_LoadDutyValue
  1761  074F                     _PWM1_LoadDutyValue:	
  1762                           
  1763                           ;pwm1.c: 75: PWM1DCH = (dutyValue & 0x03FC)>>2;
  1764                           
  1765                           ;incstack = 0
  1766                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2+status,0]
  1767  074F  0871               	movf	PWM1_LoadDutyValue@dutyValue+1,w
  1768  0750  00F3               	movwf	??_PWM1_LoadDutyValue+1
  1769  0751  0870               	movf	PWM1_LoadDutyValue@dutyValue,w
  1770  0752  00F2               	movwf	??_PWM1_LoadDutyValue
  1771  0753  36F3               	lsrf	??_PWM1_LoadDutyValue+1,f
  1772  0754  0CF2               	rrf	??_PWM1_LoadDutyValue,f
  1773  0755  36F3               	lsrf	??_PWM1_LoadDutyValue+1,f
  1774  0756  0CF2               	rrf	??_PWM1_LoadDutyValue,f
  1775  0757  0872               	movf	??_PWM1_LoadDutyValue,w
  1776  0758  002C               	movlb	12	; select bank12
  1777  0759  0092               	movwf	18	;volatile
  1778                           
  1779                           ;pwm1.c: 78: PWM1DCL = (dutyValue & 0x0003)<<6;
  1780  075A  0870               	movf	PWM1_LoadDutyValue@dutyValue,w
  1781  075B  3903               	andlw	3
  1782  075C  00F2               	movwf	??_PWM1_LoadDutyValue
  1783  075D  3005               	movlw	5
  1784  075E                     u135:	
  1785  075E  35F2               	lslf	??_PWM1_LoadDutyValue,f
  1786  075F  3EFF               	addlw	-1
  1787  0760  1D03               	skipz
  1788  0761  2F5E               	goto	u135
  1789  0762  3572               	lslf	??_PWM1_LoadDutyValue,w
  1790  0763  0091               	movwf	17	;volatile
  1791  0764  0008               	return
  1792  0765                     __end_of_PWM1_LoadDutyValue:	
  1793                           
  1794                           	psect	text10
  1795  06E8                     __ptext10:	
  1796 ;; *************** function _ADC_StartConversion *****************
  1797 ;; Defined at:
  1798 ;;		line 94 in file "mcc_generated_files/adc.c"
  1799 ;; Parameters:    Size  Location     Type
  1800 ;;		None
  1801 ;; Auto vars:     Size  Location     Type
  1802 ;;		None
  1803 ;; Return value:  Size  Location     Type
  1804 ;;                  1    wreg      void 
  1805 ;; Registers used:
  1806 ;;		None
  1807 ;; Tracked objects:
  1808 ;;		On entry : 0/0
  1809 ;;		On exit  : 0/0
  1810 ;;		Unchanged: 0/0
  1811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1816 ;;Total ram usage:        0 bytes
  1817 ;; Hardware stack levels used:    1
  1818 ;; This function calls:
  1819 ;;		Nothing
  1820 ;; This function is called by:
  1821 ;;		_main
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           
  1825                           
  1826                           ;psect for function _ADC_StartConversion
  1827  06E8                     _ADC_StartConversion:	
  1828                           
  1829                           ;adc.c: 97: ADCON0bits.GO_nDONE = 1;
  1830                           
  1831                           ;incstack = 0
  1832                           ; Regs used in _ADC_StartConversion: []
  1833  06E8  0021               	movlb	1	; select bank1
  1834  06E9  149D               	bsf	29,1	;volatile
  1835  06EA  0008               	return
  1836  06EB                     __end_of_ADC_StartConversion:	
  1837                           
  1838                           	psect	text11
  1839  071C                     __ptext11:	
  1840 ;; *************** function _ADC_SelectChannel *****************
  1841 ;; Defined at:
  1842 ;;		line 86 in file "mcc_generated_files/adc.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;  channel         1    wreg     enum E2462
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;  channel         1    1[COMMON] enum E2462
  1847 ;; Return value:  Size  Location     Type
  1848 ;;                  1    wreg      void 
  1849 ;; Registers used:
  1850 ;;		wreg, status,2, status,0
  1851 ;; Tracked objects:
  1852 ;;		On entry : 0/0
  1853 ;;		On exit  : 0/0
  1854 ;;		Unchanged: 0/0
  1855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1857 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1858 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1859 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1860 ;;Total ram usage:        2 bytes
  1861 ;; Hardware stack levels used:    1
  1862 ;; This function calls:
  1863 ;;		Nothing
  1864 ;; This function is called by:
  1865 ;;		_main
  1866 ;; This function uses a non-reentrant model
  1867 ;;
  1868                           
  1869                           
  1870                           ;psect for function _ADC_SelectChannel
  1871  071C                     _ADC_SelectChannel:	
  1872                           
  1873                           ;incstack = 0
  1874                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
  1875                           ;ADC_SelectChannel@channel stored from wreg
  1876  071C  00F1               	movwf	ADC_SelectChannel@channel
  1877                           
  1878                           ;adc.c: 89: ADCON0bits.CHS = channel;
  1879  071D  0871               	movf	ADC_SelectChannel@channel,w
  1880  071E  00F0               	movwf	??_ADC_SelectChannel
  1881  071F  0DF0               	rlf	??_ADC_SelectChannel,f
  1882  0720  0DF0               	rlf	??_ADC_SelectChannel,f
  1883  0721  0021               	movlb	1	; select bank1
  1884  0722  081D               	movf	29,w	;volatile
  1885  0723  0670               	xorwf	??_ADC_SelectChannel,w
  1886  0724  3983               	andlw	-125
  1887  0725  0670               	xorwf	??_ADC_SelectChannel,w
  1888  0726  009D               	movwf	29	;volatile
  1889                           
  1890                           ;adc.c: 91: ADCON0bits.ADON = 1;
  1891  0727  141D               	bsf	29,0	;volatile
  1892  0728  0008               	return
  1893  0729                     __end_of_ADC_SelectChannel:	
  1894                           
  1895                           	psect	text12
  1896  06FB                     __ptext12:	
  1897 ;; *************** function _ADC_IsConversionDone *****************
  1898 ;; Defined at:
  1899 ;;		line 101 in file "mcc_generated_files/adc.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;		None
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;		None
  1904 ;; Return value:  Size  Location     Type
  1905 ;;                  1    wreg      unsigned char 
  1906 ;; Registers used:
  1907 ;;		wreg, status,0
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1917 ;;Total ram usage:        0 bytes
  1918 ;; Hardware stack levels used:    1
  1919 ;; This function calls:
  1920 ;;		Nothing
  1921 ;; This function is called by:
  1922 ;;		_main
  1923 ;; This function uses a non-reentrant model
  1924 ;;
  1925                           
  1926                           
  1927                           ;psect for function _ADC_IsConversionDone
  1928  06FB                     _ADC_IsConversionDone:	
  1929                           
  1930                           ;adc.c: 104: return ((bool)(!ADCON0bits.GO_nDONE));
  1931                           
  1932                           ;incstack = 0
  1933                           ; Regs used in _ADC_IsConversionDone: [wreg+status,0]
  1934  06FB  1003               	clrc
  1935  06FC  0021               	movlb	1	; select bank1
  1936  06FD  1C9D               	btfss	29,1	;volatile
  1937  06FE  1403               	setc
  1938  06FF  3000               	movlw	0
  1939  0700  3D09               	addwfc	9,w
  1940  0701  0008               	return
  1941  0702                     __end_of_ADC_IsConversionDone:	
  1942                           
  1943                           	psect	text13
  1944  06EF                     __ptext13:	
  1945 ;; *************** function _ADC_GetConversionResult *****************
  1946 ;; Defined at:
  1947 ;;		line 107 in file "mcc_generated_files/adc.c"
  1948 ;; Parameters:    Size  Location     Type
  1949 ;;		None
  1950 ;; Auto vars:     Size  Location     Type
  1951 ;;		None
  1952 ;; Return value:  Size  Location     Type
  1953 ;;                  2    0[COMMON] unsigned int 
  1954 ;; Registers used:
  1955 ;;		wreg
  1956 ;; Tracked objects:
  1957 ;;		On entry : 0/0
  1958 ;;		On exit  : 0/0
  1959 ;;		Unchanged: 0/0
  1960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1961 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1964 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1965 ;;Total ram usage:        2 bytes
  1966 ;; Hardware stack levels used:    1
  1967 ;; This function calls:
  1968 ;;		Nothing
  1969 ;; This function is called by:
  1970 ;;		_main
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           
  1974                           
  1975                           ;psect for function _ADC_GetConversionResult
  1976  06EF                     _ADC_GetConversionResult:	
  1977                           
  1978                           ;adc.c: 110: return ((adc_result_t)((ADRESH << 8) + ADRESL));
  1979                           
  1980                           ;incstack = 0
  1981                           ; Regs used in _ADC_GetConversionResult: [wreg]
  1982  06EF  0021               	movlb	1	; select bank1
  1983  06F0  081C               	movf	28,w	;volatile
  1984  06F1  00F1               	movwf	?_ADC_GetConversionResult+1
  1985  06F2  081B               	movf	27,w	;volatile
  1986  06F3  00F0               	movwf	?_ADC_GetConversionResult
  1987  06F4  0008               	return
  1988  06F5                     __end_of_ADC_GetConversionResult:	
  1989  007E                     btemp	set	126	;btemp
  1990  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     407
                                              6 COMMON     2     2      0
            _ADC_GetConversionResult
               _ADC_IsConversionDone
                  _ADC_SelectChannel
                _ADC_StartConversion
                 _PWM1_LoadDutyValue
                  _SYSTEM_Initialize
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     220
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM1_LoadDutyValue                                   4     2      2     172
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_SelectChannel                                    2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_IsConversionDone                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversionResult                              2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversionResult
   _ADC_IsConversionDone
   _ADC_SelectChannel
   _ADC_StartConversion
   _PWM1_LoadDutyValue
   _SYSTEM_Initialize
     _ADC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM1_Initialize
     _TMR2_Initialize
     _WDT_Initialize
   ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0       E      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0       E      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Thu Oct 04 23:12:57 2018

                     __CFG_CP$OFF 0000               ___wmul@multiplicand 0072                               l183 076D  
                             l713 0767                               l753 07EF                               l729 079C  
                             l755 07F2                               l747 07DB                               l739 07C2  
                             u135 075E                               u155 076E                               u165 0773  
                             u237 0793                               _PR2 001B                   _TMR2_Initialize 0702  
                    __CFG_BORV$LO 0000                               wreg 0009                      __CFG_IESO$ON 0000  
                    __CFG_LVP$OFF 0000           __end_of_PWM1_Initialize 06FB                              _LATA 010C  
                            _LATC 010E                              _TMR2 001A                              _WPUA 020C  
                    __CFG_WRT$OFF 0000                     __CFG_FCMEN$ON 0000                              _Temp 007C  
                            _main 0780                              btemp 007E                     __CFG_BOREN$ON 0000  
                            start 0002               __CFG_PLLEN$DISABLED 0000                     __CFG_MCLRE$ON 0000  
  __size_of_OSCILLATOR_Initialize 0009     __end_of_OSCILLATOR_Initialize 071C                             ?_main 0070  
                   __CFG_WDTE$OFF 0000                             _T2CON 001C                             _DUTYC 007A  
                           _TRISA 008C                             _TRISC 008E  __size_of_ADC_GetConversionResult 0006  
                  _WDT_Initialize 06EB                             status 0003                             wtemp0 007E  
                 __initialization 07F7                      __end_of_main 07F7           __end_of_TMR2_Initialize 070A  
                  __CFG_LPBOR$OFF 0000                            ??_main 0076               __CFG_USBLSCLK$48MHz 0000  
          __end_of_WDT_Initialize 06EF     __size_of_ADC_IsConversionDone 0007                            _ADCON0 009D  
                          _ADCON1 009E                            _ADCON2 009F                            _ACTCON 039B  
                          _ADRESH 009C                            _ADRESL 009B                            _APFCON 011D  
                          _ANSELA 018C                            _ANSELC 018E                            _BORCON 0116  
                ?_PWM1_Initialize 0070                            _OSCCON 0099                            _WDTCON 0097  
                  __CFG_PWRTE$OFF 0000                            ___wmul 0765                    __CFG_STVREN$ON 0000  
                 ?_WDT_Initialize 0070                 _SYSTEM_Initialize 0729           __end_of__initialization 07FD  
              ?_SYSTEM_Initialize 0070       PWM1_LoadDutyValue@dutyValue 0070      __size_of_ADC_StartConversion 0003  
                  __pcstackCOMMON 0070               ??_SYSTEM_Initialize 0070                _PWM1_LoadDutyValue 074F  
                ?_TMR2_Initialize 0070           _ADC_GetConversionResult 06EF                    _OPTION_REGbits 0095  
             ?_PWM1_LoadDutyValue 0070         __end_of_SYSTEM_Initialize 073B              ??_PWM1_LoadDutyValue 0072  
                      __pmaintext 0780                   __CFG_PLLMULT$4x 0000                           ?___wmul 0070  
         __size_of_ADC_Initialize 0009                           _PWM1DCH 0612                           _PWM1DCL 0611  
                         _OSCTUNE 0098                           _PWM1CON 0613                   __size_of___wmul 001B  
       ??_ADC_GetConversionResult 0072                           __ptext1 0765                           __ptext2 0729  
                         __ptext3 06EB                           __ptext4 0702                           __ptext5 06F5  
                         __ptext6 073B                           __ptext7 0713                           __ptext8 070A  
                         __ptext9 074F             _OSCILLATOR_Initialize 0713                         _T2CONbits 001C  
        ??_PIN_MANAGER_Initialize 0070        __size_of_SYSTEM_Initialize 0012              end_of_initialization 07FD  
    __end_of_ADC_IsConversionDone 0702                  ??_WDT_Initialize 0070                  __CFG_FOSC$INTOSC 0000  
             _ADC_StartConversion 06E8          __size_of_PWM1_Initialize 0006              ?_ADC_StartConversion 0070  
                  __end_of___wmul 0780                    _ADC_Initialize 070A            ?_OSCILLATOR_Initialize 0070  
             start_initialization 07F7   __size_of_PIN_MANAGER_Initialize 0014             ??_ADC_StartConversion 0070  
                       _ValoreADC 0078                          ??___wmul 0074            __end_of_ADC_Initialize 0713  
                     __pbssCOMMON 0078                         ___latbits 0002              _ADC_IsConversionDone 06FB  
        __size_of_TMR2_Initialize 0008       __size_of_PWM1_LoadDutyValue 0016            _PIN_MANAGER_Initialize 073B  
               _ADC_SelectChannel 071C                   ?_ADC_Initialize 0070                ?_ADC_SelectChannel 0070  
               ??_PWM1_Initialize 0070               ??_ADC_SelectChannel 0070             ?_ADC_IsConversionDone 0070  
                  ___wmul@product 0074         __end_of_ADC_SelectChannel 0729                          _PIR1bits 0011  
                      _ADCON0bits 009D                 ___wmul@multiplier 0070          ADC_SelectChannel@channel 0071  
               ??_TMR2_Initialize 0070          ?_ADC_GetConversionResult 0070           ??_OSCILLATOR_Initialize 0070  
          ??_ADC_IsConversionDone 0070                          __ptext10 06E8                          __ptext11 071C  
                        __ptext12 06FB                          __ptext13 06EF                     __size_of_main 0077  
      __size_of_ADC_SelectChannel 000D           __size_of_WDT_Initialize 0004       __end_of_ADC_StartConversion 06EB  
         ?_PIN_MANAGER_Initialize 0070   __end_of_ADC_GetConversionResult 06F5                 __CFG_CLKOUTEN$OFF 0000  
                 _PWM1_Initialize 06F5                  ??_ADC_Initialize 0070               __CFG_CPUDIV$CLKDIV2 0000  
  __end_of_PIN_MANAGER_Initialize 074F        __end_of_PWM1_LoadDutyValue 0765  
